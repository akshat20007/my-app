{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","role","align","onClick","toggleMode","htmlFor","toggleNewMode","TextForm","useState","text","setText","tR1","settR1","tR2","settR2","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","trim","document","getElementById","select","navigator","clipboard","writeText","e1","replace","split","length","defaultProps","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9abe2e24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}{\" \"}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n          {/* </form> */}\r\n          <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              align=\"right\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault \">\r\n              Dark Mode\r\n            </label>\r\n            </div><div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              align=\"right\"\r\n              onClick={props.toggleNewMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              New Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"All capitalized\", \"success\")\r\n  };\r\n  const handleRe1Change = (e1) => {\r\n    console.log(\"R1 \");\r\n    settR1(e1.target.value);\r\n  };\r\n  const handleRe2Change = (e1) => {\r\n    console.log(\"R2 \");\r\n    settR2(e1.target.value);\r\n  };\r\n\r\n  const handledownClick = () => {\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handledelClick = () => {\r\n    console.log(\"delete was clicked \");\r\n    setText(\"\");\r\n  };\r\n  const handleWSClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text );\r\n    let newText = text.trim();\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change \");\r\n    setText(event.target.value);\r\n  };\r\n  const handleReplaceClick = () => {\r\n    console.log(\"replace was clicked\");\r\n    let newText = text.replace(tR1, tR2);\r\n    setText(newText);\r\n  };\r\n  const handleCopy = () => {\r\n    console.log(\"replace was clicked\");\r\n    var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  const [tR1, settR1] = useState(\"\");\r\n  const [tR2, settR2] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 style={{color:props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}            \r\n          ></textarea>\r\n        </div>\r\n        <div className=\"container\">\r\n          <button className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-2`} onClick={handleUpClick} >\r\n            Convert to uppercase\r\n          </button>\r\n          <button className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-2`} onClick={handledownClick}>\r\n            Convert to lowercase\r\n          </button>\r\n          <button className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-2`} onClick={handledelClick}>\r\n            Delete Text\r\n          </button>\r\n          <button className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-2`} onClick={handleWSClick}>\r\n            Delete White Spaces\r\n          </button>\r\n          <button className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-2`}onClick={handleCopy}>\r\n            Copy text\r\n            </button>\r\n        </div>\r\n        <div className=\"container \" align=\"right\" margin-right=\"30\">\r\n          <input\r\n            type=\"search\"\r\n            className=\"col-auto my-3\"\r\n            value={tR1}\r\n            onChange={handleRe1Change}\r\n            id=\"exampleFormControlinput1\"\r\n            rows=\"1\"\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white'}}\r\n          ></input>\r\n          <input\r\n            type=\"search\"\r\n            className=\"col-auto mx-3 my-3\"\r\n            value={tR2}\r\n            onChange={handleRe2Change}\r\n            id=\"exampleFormControlinput2\"\r\n            rows=\"1\"\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white'}}\r\n          ></input>\r\n          <button\r\n            className={`btn btn-${props.mode===\"dark\"?'dark':'primary'} mx-3`}\r\n            onClick={handleReplaceClick}\r\n          >\r\n            Replace Word\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2 >Your Text Summary</h2>\r\n        <p >\r\n          <b>{text.split(\" \").length-1}</b> words and<b> {text.length}</b>{\" \"}\r\n          characters\r\n        </p>\r\n        <p >\r\n          <b>{text.split(\" \").length-1<1?'0.000':.008 * text.split(\" \").length}</b> Minutes\r\n        </p>\r\n        <h2 >Preview Text</h2>\r\n        <p>{text.length>0?text:\"Enter something above to preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nTextForm.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n};\r\nTextForm.defaultProps = {\r\n  heading: \"Enter something\",\r\n};\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\n\r\nfunction alert(props) {\r\n    const capitalize =(word)=>{\r\n        let lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (    \r\n      props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  // const [newstate, setNewstate] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode was enabled\", \"success\");\n      document.title = \"Text Utils-Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode was enabled\", \"success\");\n      document.title = \"Text Utils-Light Mode\";\n    }\n  };\n  const toggleNewMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#02240a\";\n      showAlert(\"Green mode was enabled\", \"success\");\n      console.log(\"new toggle\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode was enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Text\"\n          mode={mode}\n          toggleMode={toggleMode}\n          toggleNewMode={toggleNewMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route path=\"/about\"> */}\n              {/* <About\n                mode={mode}\n                toggleMode={toggleMode}\n                toggleNewMode={toggleNewMode}\n              /> */}\n            {/* </Route> */}\n\n            {/* <Route path=\"/\"> */}\n              <TextForm\n                heading=\"Enter your text\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}